@Java
method run()
{
   if(isNet(AHEAD))
   {
      toss();
      hop();
   }
   if(isFlower(AHEAD))
   {
       pick();
       hop();
       pick();
   }
   if(isWater(AHEAD))
   {
       turn(RIGHT);
       toss();
       hop();
   }
    if(isClear(AHEAD))
   {
      pick();
      hop();
      pick();
   }
}
@@
method main()
{
  Jeroo bob = new Jeroo(4,0,NORTH,50); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
  bob.run(); 
}
